[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sentinel-timelapse"
version = "0.1.0"
description = "A Python package for downloading and processing Sentinel satellite imagery for timelapse creation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["sentinel", "satellite", "imagery", "timelapse", "geospatial", "remote-sensing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.8"
dependencies = [
    "geopandas>=0.12.0",
    "shapely>=1.8.0",
    "rasterio>=1.3.0",
    "pystac-client>=0.7.0",
    "planetary-computer>=0.5.0",
    "pyproj>=3.4.0",
    "numpy>=1.21.0",
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/sentinel-timelapse"
Documentation = "https://sentinel-timelapse.readthedocs.io/"
Repository = "https://github.com/yourusername/sentinel-timelapse"
"Bug Tracker" = "https://github.com/yourusername/sentinel-timelapse/issues"

[project.scripts]
sentinel-timelapse = "sentinel_timelapse.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["sentinel_timelapse*"]

[tool.setuptools.package-data]
sentinel_timelapse = ["*.txt", "*.md", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.flake8]
max-line-length = 88
exclude = ["tests/*", "tests/", "*/tests/*", "*/tests/"]
ignore = ["E501", "F401", "F841", "F811"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["tests/", "tests/*"]
